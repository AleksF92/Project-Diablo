<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_NPC</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize variables
range = 128;
type = "NPC";
dead = false;

//Name &amp; speech
name = "Unnamed NPC";
speech = 0;
speechList = ds_list_create();
lettersReadPerSecond = 7;
speechDuration = (room_speed / lettersReadPerSecond);
events = ds_map_create();
alarm[2] = 1;
ALPHA = 0.6;

//Watching
lookGoal = 0;
cdLookMin = room_speed * 0.5;
cdLookMax = room_speed * 5;
lookMin = 10;
lookMax = 180;
alarm[1] = randomRound(cdLookMin, cdLookMax);
image_angle = randomRound(0, 360);

//Mouseover
hover = false;
hit = false;
nearby = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set speeches
alarm[0] = 0;

ds_list_clear(speechList);

var t = instance_nearest(x, y, obj_Player);
switch (name) {
    case "Valkyria": {
        //show_message("Player: " + string(player));
        if (!t.quests[? "Valkyria's Welcome"]) {
            ds_list_add(speechList, "Hello traveller, my name is Valkyria.");
            ds_list_add(speechList, "I am going to teach you the basic controls.");
            ds_list_add(speechList, "You can access your inventory by#clicking the [B] key.");
            ds_list_add(speechList, "You can shoot projectiles using your#[Left Mouse] button.");
            ds_list_add(speechList, "You may move around by using the keys [A][S][D][W].");
            ds_list_add(speechList, "But before you go, be warned...#These woods are dangerous!");
            ds_list_add(speechList, "There are camps of bandits and#they will not treat you kindly.");
            ds_list_add(speechList, "The world is generated randomly.#So if you run into an dead end.#You may press [T] to restart the game.");
            ds_list_add(speechList, "Best of luck to you!#Here, have 5 Apples for your journey."); //8
        }
        else {
            ds_list_add(speechList, "I wish you good luck!");
            //show_message("speechCount: " + string(ds_list_size(speechList)));
        }
        break;
    }
    case "Jotun": {
        if (t.quests[? "Revenge of Jotun"] == -1) {
            ds_list_add(speechList, "Greetings lad! I'm Jotun.");
            ds_list_add(speechList, "I have a quest for you!#You know them bandits?");
            ds_list_add(speechList, "I'd like you to kill 5 of their Scrubs!#They can be found in open fields.");
            ds_list_add(speechList, "Do this for me and I will#grant you a reward!"); //3
        }
        else if (t.quests[? "Revenge of Jotun"] == 5) {
            ds_list_add(speechList, "Thank you very much!#Here is your reward!"); //0   
        }
        else if (t.quests[? "Revenge of Jotun"] == 6) {
            ds_list_add(speechList, "Good to see you again mate.");
        }      
        else if (t.quests[? "Revenge of Jotun"] == 0) {
            ds_list_add(speechList, "You're not done yet mate.#You have not killed any yet!");
        }
        else {
            ds_list_add(speechList, "You're not done yet mate.#You have only killed " + string(t.quests[? "Revenge of Jotun"]) + " of 5.");
        }

        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Select new look rotation
var dir = choose(-1, 1);
var look = randomRound(lookMin, lookMax);
lookGoal = look * dir;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Speech done, progress

//Look for more speech
if (ds_list_size(speechList) &gt; speech + 1) {
    //Go to next speech
    speech++;
    
    alarm[0] = string_length(speechList[| speech]) * speechDuration;
}
else {
    //Reset speech
    speech = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Speech events
var t = instance_find(obj_Player, 0);
switch(name) {
    case "Valkyria": {
        if (!t.quests[? "Valkyria's Welcome"] &amp;&amp; speech == 8) {
            //Quest complete
            t.quests[? "Valkyria's Welcome"] = true;

            //Give reward
            ds_list_add(t.bagList, "Apple/5");
            
            //Set speech
            alarm[2] = alarm[0];
        }
        break;
    }
    case "Jotun": {
        if (t.quests[? "Revenge of Jotun"] == -1 &amp;&amp; speech == 3) {
            //Quest started
            t.quests[? "Revenge of Jotun"] = 0;
            
            //Set speech
            alarm[2] = alarm[0];
        }
        if (t.quests[? "Revenge of Jotun"] == 5 &amp;&amp; speech == 0) {
            //Quest complete
            t.quests[? "Revenge of Jotun"] = 6;
            
            //Give reward
            ds_list_add(t.bagList, "Apple/5");
            ds_list_add(t.bagList, "Leather Chest/1");
            
            //Set speech
            alarm[2] = alarm[0];
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Look at target or random
nearby = false;
if (!dead) {
    var t = instance_nearest(x, y, obj_Player);
    if (distance_to_object(t) &lt;= range) {
        image_angle = point_direction(x, y, t.x, t.y);
        nearby = true;
        
        //Check for interaction
        if (keyboard_check_pressed(vk_space)) {
            //Interact
            if (ds_list_size(speechList)) {
                if (alarm[0]) {
                    alarm[0] = 1;
                    if (alarm[2]) {
                        alarm[2] = 1;
                    }
                }
                else {
                    alarm[0] = string_length(speechList[| speech]) * speechDuration;
                }
            }
        }
    }
    else {
        //Reset speech if out of range
        if (alarm[0]) {
            alarm[0] = 0;
            if (alarm[2]) {
                alarm[2] = 1;
            }
            speech = 0;
        }
        
        //Look random
        if (lookGoal != 0) {
            var inc = (lookGoal / max(lookGoal, -lookGoal));
            image_angle += inc;
            lookGoal -= inc;
        }
        else {
            if (!alarm[1]) {
                alarm[1] = randomRound(cdLookMin, cdLookMax);
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Disable hover
hover = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enable hover
hover = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw info box
var txt = "";
if (hover || hit || nearby) {
    txt = "[" + name + "]";
    if (type == "Enemy") {
        txt += "#(Lvl: " + string(level) + ")";
    }
    else {
        if (nearby) {
            txt += "#&gt; Press space to talk &lt;";
        }
        else {
            txt += "#&gt; Too far away &lt;";
        }
    }
}
if (alarm[0]) {
    txt = "[" + name + "]#" + speechList[| speech];
}

//Draw rectangle
var c = c_black;
if (dead) {c = c_red;}

cx = string_width(txt) / 2;
cy = string_height(txt) / 2;
yOff = y - view_yview[0] - 64;
draw_set_alpha(ALPHA);
    draw_rectangle_colour(x - view_xview[0] - cx, yOff - cy, x - view_xview[0] + cx, yOff + cy, c, c, c, c, false);
draw_set_alpha(1);

//Draw text
draw_text_centered(x - view_xview[0], yOff, txt);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw character
if (dead) {
    draw_sprite_ext(sprite_index, image_index, x, y, 1, 1, image_angle, c_gray, 1);
}
else {
    draw_self();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
